# Makefile for SSC compiler using Flex and Bison

# Compiler
CXX = clang++

# Files
LEXER = lex.l
PARSER = bison.y
EXECUTABLE = ssc_compiler
TEST_FILE = input.lex

# Intermediate files generated by Flex and Bison
LEX_C = lex.yy.c
PARSER_C = bison.tab.c
PARSER_H = bison.tab.h

# Bison and Flex flags
BISON_FLAGS = -d
FLEX_FLAGS =

# Default target: build everything
all: $(EXECUTABLE)

# Generate parser and header file with Bison
$(PARSER_C) $(PARSER_H): $(PARSER)
	bison $(BISON_FLAGS) $(PARSER)

# Generate lexer code with Flex (depends on Bison's header)
$(LEX_C): $(LEXER) $(PARSER_H)
	flex $(FLEX_FLAGS) $(LEXER)

# Compile the final executable
$(EXECUTABLE): $(PARSER_C) $(LEX_C)
	$(CXX) -o $(EXECUTABLE) $(PARSER_C) $(LEX_C)

# Run the compiler
run: $(EXECUTABLE)
	./$(EXECUTABLE) $(TEST_FILE)

# Remove intermediate and output files
clean:
	rm -f $(LEX_C) $(PARSER_C) $(PARSER_H) $(EXECUTABLE)

# Remove everything including debug files
distclean: clean
	rm -f a.out ssc.output

# Help message
help:
	@echo "Available targets:"
	@echo "  make          - Compile the SSC compiler"
	@echo "  make run      - Run the SSC compiler with the test file"
	@echo "  make clean    - Remove compiled and intermediate files"
	@echo "  make distclean- Remove all build files and debug output"
	@echo "  make help     - Display this help message"

# Declare phony targets
.PHONY: all run clean distclean help
